---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${SERVICE_NAME}
  template:
    metadata:
      labels:
        app: ${SERVICE_NAME}
    spec:
      initContainers:
        - name: init-wait-db
          image: busybox
          command: ['sh', '-c', 'for i in $(seq 1 300); do nc -zvw1 shared-database 5432 && exit 0 || sleep 3; done; exit 1']
      containers:
        - image: ${IMAGE_NAME}
          name: ${SERVICE_NAME}
          envFrom:
            - configMapRef:
                name: ${SERVICE_NAME}-config
          env:
#            Import variables from vault
            - name: S2S_KEY
              value: '${S2S_TOKEN}'
#            Import from main.tf
#            This is to use the AAT database
            - name: POSTGRES_HOST
              value: "${POSTGRES_HOST}"
            - name: POSTGRES_DATABASE
              value: "${POSTGRES_DATABASE}"
            - name: POSTGRES_USER
              value: "${POSTGRES_USER}"
            - name: POSTGRES_PASSWORD
              value: "${POSTGRES_PASSWORD}"

#            db
            - name: SPRING_DATASOURCE_URL
              value: 'jdbc:postgresql://shared-database:5432/emannotationapp?ssl=true'
            - name: SPRING_DATASOURCE_USERNAME
              value: 'emannotationapp'
            - name: SPRING_DATASOURCE_PASSWORD
              value: 'emannotationapp'
            - name: ENABLE_DB_MIGRATE
              value: 'true' #TODO: Alec set it as true, but main.tf has value = false. What should I set it to?

#            TODO: IDAM_API_BASE_URI and S2S_BASE_URI not included, should they be? why/why not?
#            in application.yaml, theyre http://localhost:4501 and 4502
#            but in variables.tf they're http://betaDevBccidamAppLB.reform.hmcts.net:80 and http://rpe-service-auth-provider-preview.service.core-compute-preview.internal
            - name: REFORM_SERVICE_NAME
              value: 'em-anno' # See em_anno_app_url in variables.tf
            - name: REFORM_TEAM
              value: 'evidence'
            - name: REFORM_SERVICE_TYPE
              value: 'em-anno' #TODO: Alec set it to 'em-anno', but main.tf has 'java'. What should I set it to?
            - name: REFORM_ENVIRONMENT
              value: 'preview' # TODO Why is preview being used if we're replacing it with AKS?
            - name: PACKAGES_NAME
              value: 'em-anno'
            - name: PACKAGES_PROJECT
              value: 'evidence'
            - name: PACKAGES_ENVIRONMENT
              value: 'preview'
            - name: ROOT_APPENDER
              value: 'JSON_CONSOLE'
            - name: JSON_CONSOLE_PRETTY_PRINT
              value: 'false'
            - name: LOG_OUTPUT
              value: 'single'
            - name: ROOT_LOGGING_LEVEL
              value: 'INFO'
            - name: LOG_LEVEL_SPRING_WEB
              value: 'INFO'
            - name: LOG_LEVEL_DM
              value: 'INFO'
            - name: SHOW_SQL
              value: 'true'
            - name: ENDPOINTS_HEALTH_SENSITIVE
              value: 'false' #TODO Alec set it as false, but main.tf has 'true'. What should I set it to?
            - name: ENDPOINTS_INFO_SENSITIVE
              value: 'false' #TODO Same as above - Alec set false, main.tf has true.
            - name: S2S_NAMES_WHITELIST
              value: 'em_api,em_gw,ccd_gw,ccd_data,sscs,divorce_document_upload,divorce_document_generator,probate_backend,jui_webapp,pui_webapp,em_npa_app'
            - name: CASE_WORKER_ROLES
              value: 'caseworker-probate,caseworker-cmc,caseworker-sscs,caseworker-divorce'
            - name: ENABLE_IDAM_HEALTH_CHECK
              value: 'false'
            - name: ENABLE_S2S_HEALTH_CHECK
              value: 'false'
            - name: APPINSIGHTS_INSTRUMENTATIONKEY
              value: '${APPINSIGHTS_INSTRUMENTATIONKEY}'
          resources:
            requests:
              memory: '1024Mi'
              cpu: '200m'
            limits:
              memory: '2048Mi'
              cpu: '2500m'
          ports:
            - containerPort: 4400
              name: http
          imagePullPolicy: Always
---
#
# Service
#
apiVersion: v1
kind: Service
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
  labels:
    app: ${SERVICE_NAME}
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 4400
  selector:
    app: ${SERVICE_NAME}
---
#
# INGRESS
#
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
    - host: ${SERVICE_FQDN}
      http:
        paths:
          - path: /
            backend:
              serviceName: ${SERVICE_NAME}
              servicePort: 80
---
#
# DATABASE
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: shared-database-initdb
  namespace: ${NAMESPACE}
data:
  initdb.sql: |
    CREATE USER emannotationapp WITH PASSWORD 'emannotationapp';
    CREATE DATABASE emannotationapp WITH OWNER = emannotationapp ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
---
apiVersion: v1
kind: Namespace
metadata:
  name: ${NAMESPACE}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shared-database
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shared-database
  template:
    metadata:
      labels:
        app: shared-database
    spec:
      containers:
        - image: postgres:10.5-alpine
          name: shared-database
          resources:
            requests:
              memory: '256Mi'
              cpu: '200m'
            limits:
              memory: '1024Mi'
              cpu: '1000m'
          imagePullPolicy: Always
          ports:
            - containerPort: 5432
              name: postgres
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d
              name: initdb
              readOnly: true
      volumes:
        - name: initdb
          configMap:
            name: shared-database-initdb
---
apiVersion: v1
kind: Service
metadata:
  name: shared-database
  namespace: ${NAMESPACE}
  labels:
    app: shared-database
spec:
  ports:
    - port: 5432
  selector:
    app: shared-database
  clusterIP: None
